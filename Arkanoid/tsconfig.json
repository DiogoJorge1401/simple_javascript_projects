{
  "compilerOptions": {
    // Enable all strict type checking options.
    "strict": true,
    // Enable error reporting for expressions and declarations with an implied any type..
    "noImplicitAny": false,
    // When type checking, take into account null and undefined.
    "strictNullChecks": true,
    // When assigning functions, check to ensure parameters and the return values are subtype-compatible.
    "strictFunctionTypes": true,
    // Check for class properties that are declared but not set in the constructor.
    "strictPropertyInitialization": false,
    // Check that the arguments for bind, call, and apply methods match the original function.
    "strictBindCallApply": true,
    // Enable error reporting when this is given the type any.
    "noImplicitThis": true,
    // Enable error reporting for codepaths that do not explicitly return in a function.
    "noImplicitReturns": true,
    // Ensure 'use strict' is always emitted.
    "alwaysStrict": true,
    // Emit additional JavaScript to ease support for importing CommonJS modules. This enables allowSyntheticDefaultImports for type compatibility.
    "esModuleInterop": true,
    // Generate .d.ts files from TypeScript and JavaScript files in your project.
    "declaration": true,
    // Skip type checking all .d.ts files.
    "skipLibCheck": true,
    // Enable experimental support for TC39 stage 2 draft decorators.
    "experimentalDecorators": true,
    // Ensure that casing is correct in imports.
    "forceConsistentCasingInFileNames": true,
    // Emit design-type metadata for decorated declarations in source files.
    "emitDecoratorMetadata": true,
    // Set the JavaScript language version for emitted JavaScript and include compatible library declarations.
    "target": "ES2020",
    // Specify what module code is generated.
    "module": "ESNext",
    // Specify how TypeScript looks up a file from a given module specifier.
    "moduleResolution": "node",
    // Specify an output folder for all emitted files.
    "outDir": "./dist",
    //Specify the base directory to resolve non-relative module names.
    "baseUrl": "src",
    "paths": {
      "@/*": [
        "./*"
      ],
    }
  },
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules",
    "dist"
  ]
}